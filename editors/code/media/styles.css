:root {
  --background-color: blanchedalmond;

  --edge-color: #548f9e;
  --highlight-edge-color: #00bcd4;
  --selected-edge-color: red;

  --hover-cell-color: #ffffa1;
  --selected-cell-color: yellow;

  --incoming-edge-color: blue;
  --outgoing-edge-color: green;
  --recurse-edge-color: black;

  --node-color: lightgray;
  --node-content-color: black;
  --node-highlight-color: red;
}

/* background */

html {
  width: 100%;
  height: 100%;
}

body {
  width: 100%;
  height: 100%;
  padding: 0;
}

body,
svg {
  width: 100%;
  height: 100%;
  background-color: var(--background-color);
}
#graph0 > polygon:first-of-type {
  fill: var(--background-color);
}

/* pointer */

.edge,
.cell.fn {
  cursor: pointer;
}
.cell {
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Cell */

/* background */
.cell :is(polygon, path):first-of-type {
  fill: var(--node-color);
}
/* border */
.cell :is(polygon, path):last-of-type {
  stroke-width: 1.13pt;
}

.cell.fn:not(.selected):not(:has(.fn:hover)):hover :is(polygon, path):first-of-type {
  fill: var(--hover-cell-color);
}
.cell.selected :is(polygon, path):first-of-type {
  fill: var(--selected-cell-color);
}

/* Edge */

.impl path {
  stroke-dasharray: 8, 3;
}
:is(.edge, .edge:hover, .edge.selected) .impl polygon {
  stroke-width: 2;
  fill: none;
}

.edge path {
  stroke: var(--edge-color);
  stroke-width: 3;
}
.edge polygon {
  stroke: var(--edge-color);
  fill: var(--edge-color);
}

.edge:hover path:not(.hover-path) {
  stroke: var(--highlight-edge-color);
}
.edge:hover polygon {
  stroke: var(--highlight-edge-color);
  fill: var(--highlight-edge-color);
}

.edge path.hover-path {
  stroke: transparent;
  stroke-width: 15;
}

.edge.selected path:not(.hover-path) {
  stroke: var(--selected-edge-color);
}
.edge.selected polygon {
  stroke: var(--selected-edge-color);
  fill: var(--selected-edge-color);
}

.incoming path:not(.hover-path) {
  stroke: var(--incoming-edge-color);
}
.incoming polygon {
  stroke: var(--incoming-edge-color);
  fill: var(--incoming-edge-color);
}

.outgoing path:not(.hover-path) {
  stroke: var(--outgoing-edge-color);
}
.outgoing polygon {
  stroke: var(--outgoing-edge-color);
  fill: var(--outgoing-edge-color);
}

.incoming.outgoing path:not(.hover-path) {
  stroke: var(--recurse-edge-color);
}
.incoming.outgoing polygon {
  stroke: var(--recurse-edge-color);
  fill: var(--recurse-edge-color);
}

/* Node */

.node > path:first-child {
  fill: var(--node-color);
  stroke: black;
  stroke-width: 1.35pt;
}
.node polygon {
  stroke: var(--node-content-color);
}
.node text {
  fill: var(--node-content-color);
}

.node.selected > path:first-child {
  stroke: var(--node-highlight-color);
  stroke-width: 2.25pt;
}

.title text {
  font-weight: 500;
}

/* selection fade */
.fade {
  opacity: 0.05;
}

/* langugage */

.interface :is(path, polygon):first-child {
  fill: cornsilk;
}
.interface > :is(path, polygon):last-of-type {
  stroke: black;
  stroke-width: 1.13pt;
  stroke-dasharray: 5, 3;
}

.module :is(path, polygon):first-child {
  fill: blanchedalmond;
}

.method-block :is(path, polygon):first-child {
  fill: burlywood;
}
